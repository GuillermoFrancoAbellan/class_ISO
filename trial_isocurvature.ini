# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
# *  CLASS input parameter file  *
# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
output = tCl,pCl,lCl,mPk
lensing = yes
write warnings = yes
write parameters = yes
root = output/trial_isocurvature_
z_max_pk = 10.0
P_k_max_h/Mpc = 10.0

H0 = 70.2
Omega_b = 0.0457

Omega_cdm = 0.2553
tau_reio = 0.056
N_ncdm = 1
N_ur = 2.0328
m_ncdm = 0.06

# primordial parameters
############## JUST ADIABATIC MODES ############################################
#n_s = 0.961
#A_s = 1.9833e-9
#Instead of A_s, one can also give ln10^{10}A_s or sigma8

############# ADIABATIC + ISOCURVATURE MODES ###################################
#We always need to indicate two wavenumbers, they work as input when we use the
# two-scale approach, and as output when we use the analytic approach
k1 = 0.002
k2 = 0.1
# THREE DIFFERENT WAYS OF PASSING THE PARAMETERS

#1) analytic spectrum, with standard CLASS parametrization
#P_k_ini type=analytic_Pk
#use_Beltran_cdi = no
#n_s = 0.9660499
#A_s = 2.100549e-09
#n_cdi = 2.1
#f_cdi = 0.1
#c_ad_cdi = 0.8
#n_ad_cdi = 0.02

# NOTE: if c_ad_cdi = 0, -1 or +1, then the code imposes n_ad_cdi=0
# In the rest of cases, for a given 0 < abs(c_ad_cdi) < 1, we must have 0.14*log(abs(c_ad_cdi)) < n_ad_cdi < -0.27*log(abs(c_ad_cdi))


#2) analytic spectrum, with Beltran parametrization (arXiv:0509209)
#P_k_ini type=analytic_Pk    #default in the code
#use_Beltran_cdi = yes
#n_s = 0.9660499
#A_glob = 2.121554e-09
#instead of A_glob, one can also give ln10^{10}A_glob
#n_cdi =2.1
#alpha_iso = 9.900990e-03
#ellipse_corr = 1.584158e-01
#delta_corr = 8.962866e-02

# NOTE: if ellipse_corr is such that c_ad_cdi = 0, -1 or +1, then the code imposes delta_corr=0
# for getting c_ad_cdi =0 or +-1, we must give ellipse_corr =0 or +-2*sqrt(alpha_iso*(1-alpha_iso))
# In the rest of cases, for a given 0 < abs(c_ad_cdi) < 1, we must have -0.14 < delta_corr  < 0.27


#3) two-scales spectrum
P_k_ini type=two_scales
use_Beltran_cdi = no
P_{RR}^1=2.343112e-09
P_{RR}^2=2.051695e-09
P_{II}^1 = 6.089741e-13
P_{II}^2 = 4.502625e-11
#Instead of P_{II}^1 and P_{II}^2, we can also give alpha_k1 and alpha_k2
P_{RI}^1=-2.833525e-11 #this quantity can be negative
|P_{RI}^2|= 2.465471e-10



# NOTE: If we want some special configurations, such as (n_cdi=1, n_cdi_ad =0, c_cdi_ad =0),
# (n_cdi=n_s, n_cdi_ad =0, c_cdi_ad =1) or (n_cdi=n_s, n_cdi_ad =0, c_cdi_ad =-1), then we have
# to select special iso = axion, anticurvaton, or curvaton

# We can get arbitrary c_cdi_ad and n_cdi_ad (inside its allowed bounds), if the values given to
# the parameters satisfy some restrictions, such as P_{RI}^1/sqrt(P_{II}^1*P_{RR}^1)>1 (look inside code)

# In the cases c_cdi_ad =0, -1 or +1 we have to impose n_cdi_ad = 0, this is achieved by setting |P_{RI}^2|=0
# P_{RI}^1 can never be exactly 0, but we can choose uncorrelated models simply by giving a very very small number to P_{RI}^1

# We can get c_cdi_ad =+-1 and arbitrary n_cdi by imposing P_{RI}^1 =-+sqrt(P_{II}^1*P_{RR}^1)

# We can get arbitrary c_cdi_ad and n_cdi=1 or n_cdi = n_s by imposing P_{II}^1 = P_{II}^2 or P_{II}^2=0


# verbose
input_verbose = 1
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
transfer_verbose = 1
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1
